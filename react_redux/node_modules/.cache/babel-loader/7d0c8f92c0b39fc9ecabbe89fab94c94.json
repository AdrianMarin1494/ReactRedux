{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","counterReducer","state","arguments","length","undefined","action","type","amount","store"],"sources":["/home/adrian/Study/Practice/ReactRedux/react_redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = {counter: 0, showCounter: true};\n\nconst counterReducer = (state = {counter: 0}, action) => {\n    if (action.type === \"increment\") {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === \"decrement\") {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === \"increase\") {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if (action.type === \"toggle\") {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAEpD,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAACJ,OAAO,EAAE;EAAC,CAAC;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,IAAIC,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;EACA,IAAIM,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;EACA,IAAIM,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGO,MAAM,CAACE,MAAM;MACtCR,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;EACA,IAAIM,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHP,WAAW,EAAE,CAACE,KAAK,CAACF,WAAW;MAC/BD,OAAO,EAAEG,KAAK,CAACH;IACnB,CAAC;EACL;EAEA,OAAOG,KAAK;AAChB,CAAC;AAED,MAAMO,KAAK,GAAGZ,WAAW,CAACI,cAAc,CAAC;AAEzC,eAAeQ,KAAK"},"metadata":{},"sourceType":"module"}